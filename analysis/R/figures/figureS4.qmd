---
title: "figureS4"
author: "Lauren Zamora"
format: html
editor: visual
---

## Figure S4

This figure shows the within i, j bin relationships between del_glaciation and del\_(MERRA-2 dust) and del\_(MERRA-2 SO4).

## Running Code

For **Figure S4** first load the following libraries:

```{r}
library(hexbin)
library(RColorBrewer)
library(mgcv)
library(dplyr)
library(ggplot2)
library(data.table)
```

Load the tog dataset, which represents the output of the GAM, and deviance predicted by each variable:

```{r}
tog<-read.csv("../../data/derived_data/tog.csv")
```

Add the multiple plot function: ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects) - cols: Number of columns in layout - layout: A matrix specifying the layout. If present, 'cols' is ignored. If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE), then plot 1 will go in the upper left, 2 will go in the upper right, and 3 will go all the way across the bottom.

```{r}
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  require(grid)

  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)

  numPlots = length(plots)

  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }

 if (numPlots==1) {
    print(plots[[1]])

  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))

    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))

      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}

```

Make the plot:

```{r}
jpeg(file='../../figures/FigureS4.jpeg',width=190, height=65, units='mm', res=600, pointsize=10)

dglaciation<-tog$dglaciation
dmerdust<-tog$dmerdust
dSO4<-tog$dSO4
final<-data.frame(dglaciation, dmerdust, dSO4)

pdust<-ggplot(final, aes(x = dmerdust, y = dglaciation)) +   stat_binhex() +   scale_fill_gradient(name = "count", trans = "log",  breaks = 10^(0:2)) + theme(axis.title.y=element_text(size=8), axis.title.x=element_text(size=8), panel.background = element_rect(fill = 'white', colour = 'black')) + labs(x = expression(atop(NA, atop(textstyle(' '),textstyle('\u{2202}(MERRA-2 dust)'['i,j']*' (ng m'^-3*')') ))), y = expression(atop(NA, atop(textstyle(' '),textstyle('\u{2202}glaciation'['i,j']*' (%)') )))) + annotate("text", x = -3000, y = 50, label = 'bold("a)")', parse = TRUE) + lims(y=c(-25,50), x=c(-2500,3000)) 

pso4<-ggplot(final, aes(x = dSO4, y = dglaciation)) +   stat_binhex() +   scale_fill_gradient(name = "count", trans = "log",  breaks = 10^(0:2)) + theme(axis.title.y=element_text(size=8), axis.title.x=element_text(size=8), panel.background = element_rect(fill = 'white', colour = 'black')) + labs(x = expression(atop(NA, atop(textstyle(' '),textstyle('\u{2202}(MERRA-2 sulfate)'['i,j']*' (ng m'^-3*')') ))), y = expression(atop(NA, atop(textstyle(' '),textstyle('\u{2202}glaciation'['i,j']*' (%)') )))) + annotate("text", x = -300, y = 50, label = 'bold("b)")', parse = TRUE) + lims(y=c(-25,50), x=c(-300,400)) 

pdust2<-plot(dglaciation,dmerdust)

multiplot(pdust,pso4, cols=2)
dev.off()


```
